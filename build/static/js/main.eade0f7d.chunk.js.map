{"version":3,"sources":["containers/SideMenu.tsx","server.tsx","actions/index.tsx","components/TitleCard.tsx","containers/Syllabus.tsx","containers/Home.tsx","containers/Root.tsx","containers/App.tsx","reducers/index.tsx","reducers/menu.tsx","reducers/phone.tsx","reducers/colleges.tsx","reducers/courses.tsx","reducers/courseInfo.tsx","index.tsx","components/Center.tsx"],"names":["useCourseStyles","makeStyles","root","background","Course","props","classes","className","disablePadding","button","component","Link","to","link","primary","name","useGradeStyles","Grade","useState","open","setOpen","Fragment","onClick","in","timeout","unmountOnExit","courses","map","course","i","key","Department","state","handleClick","bind","this","setState","grades","grade","React","Component","useKosenStyles","position","height","overflow","padding","Kosen","list","departments","length","variant","department","MobileDrawerDidAppearRaw","onAppear","setPhone","MobileDrawerDidAppear","connect","dispatch","value","SideMenu","onMount","iOS","process","browser","test","navigator","userAgent","smUp","drawerIndex","paper","drawerPaper","menu","onOpen","onClose","ModalProps","keepMounted","disableBackdropTransition","disableDiscovery","xsDown","clsx","rootHide","setMenu","fetchCourses","withStyles","theme","width","transition","transitions","create","easing","easeOut","duration","enteringScreen","sharp","leavingScreen","zIndex","appBar","serverOrigin","URL","window","location","href","origin","fetchData","url","urlConstraint","num","server","parameter","pathname","split","filter","x","splice","unshift","join","fetch","then","res","json","status","err","data","Error","msg","Promise","reject","getDepartments","resolve","len","catch","getCourses","gradeRegex","type","toggleMenu","receiveColleges","colleges","fetchColleges","console","error","receiveCourses","a","kosenServer","departmentServer","parsedDepartmentServer","gradePack","student_grade","undefined","push","course_title","course_code","Object","keys","forEach","receiveCourseInfo","info","fetchCourseInfo","log","useTitleStyles","card","TitleCard","Card","CardContent","Typography","gutterBottom","title","children","action","CardActions","CourseTitle","content","Grid","container","direction","item","code","Hidden","Box","display","my","mt","mb","InformationList","Chart","id","label","cell","addData","margin","right","left","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","borderColor","from","modifiers","sliceLabel","e","slicesLabelsSkipAngle","animate","motionStiffness","motionDamping","enableRadialLabels","useCenterStyles","overlay","top","bottom","flexDirection","justifyContent","alignItems","GridChart","result","sum","md","xs","useTableStyles","header","borderTopLeftRadius","borderTopRightRadius","color","PlanTable","Paper","Toolbar","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","plan","row","goals","useOtherCardStyles","OtherCard","spacing","Button","original_url","target","rel","startIcon","ReportProblem","Sidebar","instructor","class_format","term","course_category","credits","classes_per_week","year","textbook_and_or_teaching_materials","useMainContentStyle","grid","maxWidth","MainContent","evaluation","first","second","Syllabus","onUpdate","prevProps","match","params","phone","closeMenu","college","isFetching","Center","CircularProgress","sm","evaluation_weight","course_plan_first_term","course_plan_second_term","Container","courseInfo","useHomeStyles","Home","useKosenSelectorStyle","noSpaceY","paddingTop","paddingBottom","marginTop","marginBottom","arrowIcon","marginLeft","KosenSelector","history","useHistory","anchorEl","setAnchorEl","onChange","List","aria-label","ListItem","currentTarget","ListItemText","secondary","secondaryTypographyProps","style","Menu","Boolean","MenuItem","selected","kosens","kosen","Root","AppBar","IconButton","menuButton","edge","flexGrow","path","App","menuOpen","handleMenuClick","handleMenuClose","handleMenuOpen","CssBaseline","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eade0f7d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { Box, LinearProgress, Collapse, Drawer, Hidden, List, ListItem, ListItemText, SwipeableDrawer, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { StateType } from '../reducers';\nimport { DispatchType } from '../index';\nimport { setMenu, setPhone, fetchCourses } from '../actions';\nimport Center from '../components/Center';\n\nconst useCourseStyles = makeStyles({\n    root: {\n        background: '#EDEDED',\n    },\n});\nexport interface CourseProps {\n    name: string,\n    link: string,\n}\nfunction Course(props: CourseProps) {\n    const classes = useCourseStyles();\n\n    return (\n        <List className={classes.root} disablePadding>\n            <ListItem button component={Link} to={props.link}>\n                <ListItemText primary={props.name} />\n            </ListItem>\n        </List>\n    );\n}\n\nconst useGradeStyles = makeStyles({\n    root: {\n        background: '#F7F7F7',\n    },\n});\nexport interface GradeProps {\n    name: string,\n    courses: CourseProps[];\n}\nfunction Grade(props: GradeProps) {\n    const classes = useGradeStyles();\n    const [open, setOpen] = useState(false);\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <React.Fragment>\n            <ListItem className={classes.root} button onClick={handleClick}>\n                <ListItemText primary={props.name} />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                {props.courses.map((course, i) =>\n                <Course key={course.link} {...course} />\n                )}\n            </Collapse>\n        </React.Fragment>\n    );\n}\n\nexport interface DepartmentProps {\n    name: string,\n    grades: GradeProps[],\n}\ninterface DepartmentState {\n    open: boolean,\n}\nclass Department extends React.Component<DepartmentProps, DepartmentState> {\n    constructor(props: any) {\n        super(props);\n        this.state = { open: false };\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick() {\n        this.setState({ open: !this.state.open });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <ListItem button onClick={this.handleClick}>\n                    <ListItemText primary={this.props.name} />\n                    {this.state.open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                    <List disablePadding>\n                        {this.props.grades.map((grade, i) =>\n                        <Grade key={grade.name} {...grade} />\n                        )}\n                    </List>\n                </Collapse>\n            </React.Fragment>\n        );\n    }\n}\n\nconst useKosenStyles = makeStyles({\n    root: {\n        position: 'relative' as any,\n        height: '100%' as any,\n        overflow: 'auto',\n        padding: 0,\n    },\n});\ninterface KosenProps {\n    departments: DepartmentProps[] | null,\n}\nfunction Kosen(props: KosenProps) {\n    const classes = useKosenStyles();\n    let list: JSX.Element;\n    if(props.departments === null) {\n        list = <LinearProgress />;\n    } else if(props.departments.length === 0) {\n        list = (\n            <Center>\n                <Typography variant=\"h5\">NOT AVAILABLE</Typography>\n            </Center>\n        );\n    } else {\n        list = (\n            <React.Fragment>\n                {props.departments.map((department) =>\n                <Department key={department.name} {...department} />\n                )}\n            </React.Fragment>\n        );\n    }\n    return (\n        <List className={classes.root} component=\"nav\">\n            {list}\n        </List>\n    );\n}\n\ninterface MobileDrawerDidAppearProps {\n    onAppear: () => void,\n    setPhone: (value: boolean) => void,\n}\nclass MobileDrawerDidAppearRaw extends React.Component<MobileDrawerDidAppearProps, {}> {\n    componentDidMount() {\n        this.props.onAppear();\n        this.props.setPhone(true);\n    }\n    componentWillUnmount() {\n        this.props.setPhone(false);\n    }\n    render() {\n        return null;\n    }\n}\nconst mapMobileDrawerDidAppearDispatchToProps = (dispatch: DispatchType) => ({\n    setPhone: (value: boolean) => dispatch(setPhone(value)),\n});\n\nconst MobileDrawerDidAppear = connect((state: StateType) => ({}), mapMobileDrawerDidAppearDispatchToProps)(MobileDrawerDidAppearRaw);\n\nconst drawerWidth = 256;\nconst SideMenuStyles = (theme: Theme) => ({\n    root: {\n        width: drawerWidth,\n        transition: theme.transitions.create(['width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    rootHide: {\n        transition: theme.transitions.create(['width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerIndex: {\n        zIndex: (theme.zIndex.appBar - 1 + ' !important') as any,\n    },\n});\ninterface SideMenuProps extends KosenProps {\n    menu: boolean,\n    departments: DepartmentProps[] | null,\n    onClose: () => void,\n    onOpen: () => void,\n    onMount: () => void,\n    classes: any,\n}\nclass SideMenu extends React.Component<SideMenuProps> {\n    componentDidMount() {\n        this.props.onMount();\n    }\n    render() {\n        const iOS = (process as any).browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n        \n        return (\n            <nav>\n                <Hidden smUp>\n                    <SwipeableDrawer classes={{ root: this.props.classes.drawerIndex, paper: this.props.classes.drawerPaper }} variant=\"temporary\" open={this.props.menu} onOpen={this.props.onOpen} onClose={this.props.onClose} ModalProps={{ keepMounted: true }} disableBackdropTransition={!iOS} disableDiscovery={iOS}>\n                        <MobileDrawerDidAppear onAppear={this.props.onClose} />\n                        <Toolbar />\n                        <Kosen departments={this.props.departments} />\n                    </SwipeableDrawer>\n                </Hidden>\n                <Hidden xsDown>\n                    <Box className={clsx(this.props.classes.root, !this.props.menu && this.props.classes.rootHide)}>\n                        <Drawer classes={{ paper: clsx(this.props.classes.drawerPaper, this.props.classes.drawerIndex) }} variant=\"persistent\" open={this.props.menu}>\n                            <Toolbar />\n                            <Kosen departments={this.props.departments} />\n                        </Drawer>\n                    </Box>\n                </Hidden>\n            </nav>\n        );\n    }\n}\n\nconst mapStateToProps = (state: StateType) => ({\n    menu: state.menu,\n    departments: state.courses,\n});\n\nconst mapDispatchToProps = (dispatch: DispatchType) => ({\n    onClose: () => dispatch(setMenu(false)),\n    onOpen: () => dispatch(setMenu(true)),\n    onMount: () => dispatch(fetchCourses() as any),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(SideMenuStyles)(SideMenu));","import fetch, { Response } from 'cross-fetch';\n\nimport { DepartmentProps, GradeProps, CourseProps } from './containers/SideMenu';\n\nlet serverOrigin = new URL(window.location.href).origin;\nif(!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    serverOrigin = 'http://localhost:8000';\n}\n\ninterface ServerResponce {\n    status: number,\n    data: any,\n}\ninterface ServerErrorData {\n    msg: string,\n}\ninterface ServerListData {\n    list: any,\n}\nfunction fetchData(url: string, urlConstraint: (len: number) => boolean, num: number): Promise<[string, any]> {\n    let parsed = new URL(url);\n    let parameter = parsed.pathname.split('/').filter(x => x.length > 0);\n    let server: string;\n    if(!urlConstraint(parameter.length)) {\n        return Promise.reject(new Error(\"The specified url is not valid.\"));\n    }\n    parameter.splice(num);\n    parameter.unshift(serverOrigin);\n    server = parameter.join('/');\n    return fetch(server + '/json')\n        .then((res: Response) => res.json())\n        .then((res: ServerResponce) => {\n            if(res.status !== 200) {\n                let err: ServerErrorData = res.data;\n                throw new Error(err.msg);\n            }\n            return [server, res.data as CourseData];\n        });\n}\n\ninterface PlanRow {\n    theme: string,\n    goals: string,\n}\ninterface EvaluationCell {\n    label: string,\n    data: number,\n}\ninterface EvaluationTable {\n    [index: string]: EvaluationCell[],\n}\nexport interface CourseData {\n    course_code: string,\n    college: string,\n    year: string,\n    course_title: string,\n    course_category: string,\n    class_format: string,\n    credits: string,\n    department: string,\n    student_grade: string,\n    term: string,\n    classes_per_week: string,\n    textbook_and_or_teaching_materials: string,\n    instructor: string,\n    course_plan_first_term: PlanRow[],\n    course_plan_second_term: PlanRow[],\n    evaluation_weight: EvaluationTable,\n    original_url: string,\n}\nexport function getCourseData(url: string): Promise<CourseData> {\n    return new Promise((resolve: (data: CourseData) => void, reject: (err: Error) => void) => {\n        fetchData(url, (len) => len === 3, 3)\n        .then(([_url, data]: [string, CourseData]) => resolve(data))\n        .catch((err: Error) => reject(err));\n    });\n}\n\nexport interface KosenData {\n    college: string,\n}\nexport function getKosens(): Promise<[string, KosenData[]]> {\n    return new Promise((resolve: ([url, data]: [string, KosenData[]]) => void, reject: (err: Error) => void) => {\n        fetchData(window.location.href, (len) => len >= 0, 0)\n        .then(([server, data]: [string, ServerListData]) => resolve([server, data.list as KosenData[]]))\n        .catch((err: Error) => reject(err));\n    });\n}\n\ninterface DepartmentData {\n    department: string,\n}\nfunction getDepartments(url: string): Promise<[string, DepartmentData[]]> {\n    return new Promise((resolve: ([url, data]: [string, DepartmentData[]]) => void, reject: (err: Error) => void) => {\n        fetchData(url, (len) => len >= 1, 1)\n        .then(([server, data]: [string, ServerListData]) => resolve([server, data.list as DepartmentData[]]))\n        .catch((err: Error) => reject(err));\n    });\n}\n\ninterface CourseConciseData {\n    course_code: string,\n    course_title: string,\n    student_grade: string,\n}\nfunction getCourses(url: string): Promise<[string, CourseConciseData[]]> {\n    return new Promise((resolve: ([url, data]: [string, CourseConciseData[]]) => void, reject: (err: Error) => void) => {\n        fetchData(url, (len) => len >= 2, 2)\n        .then(([server, data]: [string, ServerListData]) => resolve([server, data.list as CourseConciseData[]]))\n        .catch((err: Error) => reject(err));\n    });\n}\n\nconst gradeRegex = /^\\d+$/;\ninterface GradePack {\n    [index: string]: CourseProps[];\n}\nexport function getKosenData(url: string): Promise<DepartmentProps[]> {\n    return new Promise(async (resolve: (data: DepartmentProps[]) => void, reject: (err: Error) => void) => {\n        try {\n            let data: DepartmentProps[] = [];\n            let [kosenServer, departments] = await getDepartments(url);\n            for(let department of departments) {\n                let [departmentServer, courses] = await getCourses(kosenServer + '/' + department.department);\n                let parsedDepartmentServer = new URL(departmentServer);\n                let gradePack: GradePack = {};\n                let grades: GradeProps[] = []\n                for(let course of courses) {\n                    let grade = course.student_grade;\n                    if(gradeRegex.test(grade)) grade += '年';\n                    if(gradePack[grade] === undefined) gradePack[grade] = [];\n                    gradePack[grade].push({ name: course.course_title, link: parsedDepartmentServer.pathname + '/' + course.course_code });\n                }\n                Object.keys(gradePack).forEach((key) => grades.push({ name: key, courses: gradePack[key] }));\n                data.push({\n                    name: department.department,\n                    grades: grades,\n                });\n            }\n            resolve(data);\n        } catch(e) {\n            reject(e);\n        }\n    });\n}\n","import { DispatchType } from '../index';\nimport { DepartmentProps } from '../containers/SideMenu';\nimport { SyllabusData } from '../containers/Syllabus';\nimport { KosenData, getCourseData, getKosens, getKosenData } from '../server';\n\nexport interface SetMenuAction {\n    type: string,\n    value: boolean,\n}\nexport const setMenu = (value: boolean) => ({\n    type: 'SET_MENU',\n    value,\n});\n\nexport interface ToggleMenuAction {\n    type: string,\n}\nexport const toggleMenu = () => ({\n    type: 'TOGGLE_MENU',\n});\n\nexport interface SetPhoneAction {\n    type: string,\n    value: boolean,\n}\nexport const setPhone = (value: boolean) => ({\n    type: 'SET_PHONE',\n    value,\n});\n\nexport interface ReceiveCollegesAction {\n    type: string,\n    colleges: KosenData[],\n};\nexport const receiveColleges = (colleges: KosenData[]) => ({\n    type: 'RECEIVE_COLLEGES',\n    colleges,\n});\n\nexport const fetchColleges = () => (dispatch: DispatchType) => {\n    return getKosens()\n    .then(([_url, data]: [string, KosenData[]]) => dispatch(receiveColleges(data)))\n    .catch((err: Error) => {\n        console.error(err);\n        dispatch(receiveColleges([]));\n    });\n};\n\nexport interface ReceiveCoursesAction {\n    type: string,\n    departments: DepartmentProps[],\n}\nexport const receiveCourses = (departments: DepartmentProps[]) => ({\n    type: 'RECEIVE_COURSES',\n    departments,\n});\n\nexport interface RequestCoursesAction {\n    type: string,\n}\nexport const requestCourses = () => ({\n    type: 'REQUEST_COURSES',\n});\n\nexport const fetchCourses = () => (dispatch: DispatchType) => {\n    dispatch(requestCourses());\n    return getKosenData(window.location.href)\n    .then((data) => dispatch(receiveCourses(data)))\n    .catch((err: Error) => {\n        console.error(err);\n        dispatch(receiveCourses([]));\n    });\n};\n\nexport interface RequestCourseInfoAction {\n    type: string,\n}\nexport const requestCourseInfo = () => ({\n    type: 'REQUEST_COURSE_INFO',\n});\n\nexport interface ReceiveCourseInfoAction {\n    type: string,\n    info: SyllabusData | null,\n}\nexport const receiveCourseInfo = (info: SyllabusData | null) => ({\n    type: 'RECEIVE_COURSE_INFO',\n    info,\n});\n\nexport const fetchCourseInfo = () => (dispatch: DispatchType) => {\n    dispatch(requestCourseInfo());\n    return getCourseData(window.location.href)\n    .then((data) => dispatch(receiveCourseInfo(data)))\n    .catch((err: Error) => {\n        console.log(err);\n        dispatch(receiveCourseInfo(null));\n    });\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActions, CardContent, Typography } from '@material-ui/core';\n\nconst useTitleStyles = makeStyles({\n    card: {\n        overflow: 'visible',\n    },\n});\ninterface TitleCardProps {\n    title: string,\n    action?: JSX.Element,\n    children: any,\n}\nexport default function TitleCard(props: TitleCardProps) {\n    const classes = useTitleStyles();\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <Typography variant=\"h4\" gutterBottom>{props.title}</Typography>\n                {props.children}\n            </CardContent>\n            {props.action &&\n            <CardActions>\n                {props.action}\n            </CardActions>}\n        </Card>\n    );\n}","import React from 'react';\nimport { Box, Button, Card, CardContent, CircularProgress, Container, Grid, Hidden, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Toolbar, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ReportProblem } from '@material-ui/icons';\nimport { ResponsivePie, PieDatum } from '@nivo/pie';\nimport { connect } from 'react-redux';\n\nimport { StateType } from '../reducers'\nimport { fetchCourseInfo, setMenu } from '../actions';\nimport { DispatchType } from '..';\nimport Center from '../components/Center';\nimport TitleCard from '../components/TitleCard';\n\ninterface CourseTitleProps {\n    title: string,\n    code: string,\n}\nfunction CourseTitle(props: CourseTitleProps) {\n    let content = (\n        <Grid container direction=\"column\">\n            <Grid item>\n                <Typography variant=\"h2\">{props.title}</Typography>\n            </Grid>\n            <Grid item>\n                <Typography variant=\"subtitle2\">科目番号：{props.code}</Typography>\n            </Grid>\n        </Grid>\n    );\n\n    return (\n        <React.Fragment>\n            <Hidden smUp>\n                <Box display=\"flex\" my={4}>{content}</Box>\n            </Hidden>\n            <Hidden xsDown>\n                <Box display=\"flex\" mt={8} mb={4}>{content}</Box>\n            </Hidden>\n        </React.Fragment>\n    );\n}\n\ninterface InformationListProps {\n    title: string,\n    children: string,\n}\nfunction InformationList(props: InformationListProps) {\n    return (\n        <React.Fragment>\n            <Typography variant=\"overline\" gutterBottom>{props.title}</Typography>\n            <Typography variant=\"body1\">{props.children}</Typography>\n        </React.Fragment>\n    );\n}\n\ninterface EvaluationCell {\n    label: string,\n    data: number,\n}\ninterface ChartProps {\n    data: EvaluationCell[],\n}\nclass Chart extends React.Component<ChartProps> {\n    data: PieDatum[] = [];\n    addData(id: string, value: number) {\n        if(value > 0) {\n            this.data.push({\n                id: id,\n                label: id,\n                value: value,\n            });\n        }\n    }\n    render() {\n        this.data = [];\n        this.props.data.forEach((cell: EvaluationCell) => this.addData(cell.label, cell.data));\n\n        return (\n            <ResponsivePie\n                data={this.data}\n                margin={{ right: 8, left: 8 }}\n                innerRadius={0.5}\n                padAngle={1}\n                cornerRadius={2}\n                colors={{ scheme: 'pastel2' }}\n                borderWidth={1}\n                borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n                sliceLabel={(e) => `${e.id} (${e.value})` }\n                slicesLabelsSkipAngle={10}\n                animate={true}\n                motionStiffness={90}\n                motionDamping={15}\n                enableRadialLabels={false}\n            />\n        );\n    }\n}\n\nconst useCenterStyles = makeStyles({\n    root: {\n        position: 'relative',\n    },\n    overlay: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n});\ninterface GridChartProps extends ChartProps {\n    title: string,\n}\nfunction GridChart(props: GridChartProps) {\n    const classes = useCenterStyles();\n    let result = null;\n    let sum = 0;\n    props.data.forEach((cell: EvaluationCell) => sum += cell.data);\n    if(sum > 0) {\n        result = (\n            <Grid item md={6} xs={12}>\n                <Box className={classes.root} height={256}>\n                    <Box display=\"flex\" className={classes.overlay}>\n                        <Typography variant=\"caption\">{props.title}</Typography>\n                    </Box>\n                    <Chart {...props} />\n                </Box>\n            </Grid>\n        );\n    }\n    return result;\n}\n\nconst useTableStyles = makeStyles({\n    header: {\n        position: 'sticky',\n        top: 0,\n        borderTopLeftRadius: 'inherit',\n        borderTopRightRadius: 'inherit',\n        background: '#01A299',\n        color: '#FFFFFF',\n    },\n    cell: {\n        width: 64,\n    },\n});\ninterface PlanRow {\n    theme: string,\n    goals: string,\n}\ninterface PlanTableProps {\n    title: string,\n    plan: PlanRow[],\n}\nfunction PlanTable(props: PlanTableProps) {\n    const classes = useTableStyles();\n    return (\n        <Paper>\n            <Toolbar className={classes.header}>\n                <Typography variant=\"h5\">{props.title}</Typography>\n            </Toolbar>\n            <TableContainer>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.cell}>週</TableCell>\n                            <TableCell>授業内容・方法</TableCell>\n                            <TableCell>週ごとの到達目標</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {props.plan.map((row, i) => (\n                        <TableRow key={i + row.theme}>\n                            <TableCell>{i + 1}週</TableCell>\n                            <TableCell>{row.theme}</TableCell>\n                            <TableCell>{row.goals}</TableCell>\n                        </TableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Paper>\n    );\n}\n\nconst useOtherCardStyles = makeStyles({\n    button: {\n        width: '100%',\n    }\n});\ninterface OtherCardProps {\n    original_url: string,\n}\nfunction OtherCard(props: OtherCardProps) {\n    const classes = useOtherCardStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Grid container direction=\"column\" spacing={2}>\n                    <Grid item>\n                        <Button className={classes.button} variant=\"outlined\" href={props.original_url} target=\"_blank\" rel=\"noreferrer\">オリジナルサイトを表示</Button>\n                    </Grid>\n                    <Grid item>\n                        <Button className={classes.button} variant=\"contained\" color=\"secondary\" startIcon={<ReportProblem />} href=\"https://github.com/makutamoto/websyllabus-frontend/issues\" target=\"_blank\" rel=\"noreferrer\">問題を報告</Button>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n}\n\ninterface SidebarProps {\n    year: string,\n    course_category: string,\n    class_format: string,\n    credits: string,\n    department: string,\n    student_grade: string,\n    term: string,\n    classes_per_week: string,\n    textbook_and_or_teaching_materials: string,\n    instructor: string,\n    original_url: string,\n}\nfunction Sidebar(props: SidebarProps) {\n    return (\n        <Grid container direction=\"column\" spacing={4}>\n            <Grid item>\n                <TitleCard title=\"科目情報\">\n                    <InformationList title=\"担当教員\">{props.instructor}</InformationList>\n                    <InformationList title=\"授業形態\">{props.class_format}</InformationList>\n                    <InformationList title=\"開設期\">{props.term}</InformationList>\n                    <InformationList title=\"科目区分\">{props.course_category}</InformationList>\n                    <InformationList title=\"履修単位\">{props.credits}</InformationList>\n                    <InformationList title=\"周時間数\">{props.classes_per_week}</InformationList>\n                    <InformationList title=\"開設学科\">{props.department}</InformationList>\n                    <InformationList title=\"対象学年\">{props.student_grade}</InformationList>\n                    <InformationList title=\"開講年度\">{props.year}</InformationList>\n                    <InformationList title=\"教科書/教材\">{props.textbook_and_or_teaching_materials}</InformationList>\n                </TitleCard>\n            </Grid>\n            <Hidden xsDown>\n                <Grid item>\n                    <OtherCard original_url={props.original_url} />\n                </Grid>\n            </Hidden>\n        </Grid>\n    );\n}\n\nconst useMainContentStyle = makeStyles({\n    grid: {\n        maxWidth: '100%',\n    }\n});\ninterface EvaluationTable {\n    [index: string]: EvaluationCell[],\n}\ninterface MainContentProps {\n    evaluation: EvaluationTable,\n    first: PlanRow[],\n    second: PlanRow[],\n    original_url: string,\n}\nfunction MainContent(props: MainContentProps) {\n    const classes = useMainContentStyle();\n    return (\n        <Grid container direction=\"column\" spacing={4}>\n            <Grid className={classes.grid} item>\n                <TitleCard title=\"評価割合\">\n                    <Grid container spacing={4}>\n                        {Object.keys(props.evaluation).map(key =>\n                            <GridChart key={key} title={key} data={props.evaluation[key]} />\n                        )}\n                    </Grid>\n                </TitleCard>\n            </Grid>\n            <Grid item>\n                <TitleCard title=\"授業計画\">\n                    <Grid container spacing={2}>\n                        {props.first.length > 0 &&\n                        <Grid item>\n                            <PlanTable title=\"前期\" plan={props.first} />\n                        </Grid>\n                        }\n                        {props.second.length > 0 &&\n                        <Grid item>\n                            <PlanTable title=\"後期\" plan={props.second} />\n                        </Grid>\n                        }\n                    </Grid>\n                </TitleCard>\n            </Grid>\n            <Hidden smUp>\n                <Grid item>\n                    <OtherCard original_url={props.original_url} />\n                </Grid>\n            </Hidden>\n        </Grid>\n    );\n}\n\nexport interface SyllabusData {\n    course_code: string,\n    college: string,\n    year: string,\n    course_title: string,\n    course_category: string,\n    class_format: string,\n    credits: string,\n    department: string,\n    student_grade: string,\n    term: string,\n    classes_per_week: string,\n    textbook_and_or_teaching_materials: string,\n    instructor: string,\n    course_plan_first_term: PlanRow[],\n    course_plan_second_term: PlanRow[],\n    evaluation_weight: EvaluationTable,\n    original_url: string,\n}\nexport interface SyllabusProps {\n    phone: boolean,\n    isFetching: boolean,\n    data: SyllabusData | null,\n    closeMenu: () => void,\n    onUpdate: () => void,\n    match: { params: { college: string, department?: string, course?: string }},\n}\nclass Syllabus extends React.Component<SyllabusProps> {\n    componentDidMount() {\n        this.props.onUpdate();\n    }\n    componentDidUpdate(prevProps: SyllabusProps) {\n        if(this.props.match.params.department !== undefined || this.props.match.params.course !== undefined) {\n            if(prevProps.match.params.department! + prevProps.match.params.course! !== this.props.match.params.department! + this.props.match.params.course!) {\n                if(this.props.phone) this.props.closeMenu();\n                this.props.onUpdate();\n            }\n        } else if(prevProps.match.params.college !== this.props.match.params.college) {\n            this.props.onUpdate();\n        }\n    }\n    render() {\n        let content: JSX.Element | null;\n        if(this.props.isFetching) {\n            content = (\n                <Center>\n                    <CircularProgress />\n                </Center>\n            );\n        } else if(this.props.data === null) {\n            content = (\n                <Center>\n                    <Typography variant=\"h5\">NOT SELECTED</Typography>\n                </Center>\n            );\n        } else {\n            content = (\n                <React.Fragment>\n                    <CourseTitle title={this.props.data.course_title} code={this.props.data.course_code} />\n                    <Grid container spacing={4}>\n                        <Grid item sm={4} xs={12}>\n                            <Sidebar {...this.props.data} />\n                        </Grid>\n                        <Grid item sm={8} xs={12}>\n                            <MainContent evaluation={this.props.data.evaluation_weight} first={this.props.data.course_plan_first_term} second={this.props.data.course_plan_second_term} original_url={this.props.data.original_url} />\n                        </Grid>\n                    </Grid>\n                </React.Fragment>\n            );\n        }\n    \n        return (\n            <Container className=\"centerParent\" maxWidth=\"md\">{content}</Container>\n        );\n    }\n}\n\nconst mapStateToProps = (state: StateType) => ({\n    phone: state.phone,\n    isFetching: state.courseInfo.isFetching,\n    data: state.courseInfo.info,\n});\n\nconst mapDispatchToProps = (dispatch: DispatchType) => ({\n    closeMenu: () => dispatch(setMenu(false)),\n    onUpdate: () => dispatch(fetchCourseInfo() as any),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Syllabus);","import React from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Center from '../components/Center';\nimport TitleCard from '../components/TitleCard';\n\nconst useHomeStyles = makeStyles({\n    card: {\n        width: 300,\n    }\n});\nexport function Home(): JSX.Element {\n    const classes = useHomeStyles();\n    let action = (\n        <React.Fragment>\n            <Button variant=\"text\" href=\"https://github.com/makutamoto/websyllabus-frontend\" target=\"_blank\" rel=\"noreferrer\">GITHUB</Button>\n            <Button variant=\"text\" href=\"https://syllabus.kosen-k.go.jp/Pages/PublicSchools\" target=\"_blank\" rel=\"noreferrer\">本家サイト</Button>\n        </React.Fragment>\n    );\n\n    return (\n        <Box className=\"centerParent\">\n            <Center>\n                <Box className={classes.card}>\n                    <TitleCard title=\"CherryGrape\" action={action}>\n                        <p>\n                            このサイトは国立高等専門学校機構が提供する高専Webシラバスを整理し見やすくするために、個人的用途で制作されました。\n                            このサイトのコンテンツのデータはWebスクレイピングにより取得されており、権利はすべて本家サイトに帰属しています。\n                        </p>\n                    </TitleCard>\n                </Box>\n            </Center>\n        </Box>\n    );\n}\n","import React from 'react';\nimport { AppBar, Box, CircularProgress, IconButton, List, ListItem, ListItemText, Menu, MenuItem, Toolbar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { makeStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { useHistory } from 'react-router-dom';\n\nimport { DispatchType } from '../index';\nimport { KosenData } from '../server';\nimport { StateType } from '../reducers';\nimport { fetchColleges, fetchCourses, toggleMenu } from '../actions';\nimport SideMenu from './SideMenu';\nimport Syllabus from './Syllabus';\nimport { Home } from './Home';\n\nconst useKosenSelectorStyle = makeStyles((theme: Theme) => ({\n    noSpaceY: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        marginTop: 0,\n        marginBottom: 0,\n    },\n    arrowIcon: {\n        marginLeft: theme.spacing(1),\n    },\n}));\ninterface KosenSelectorProps {\n    college?: string,\n    kosens: KosenData[],\n}\nfunction KosenSelector(props: KosenSelectorProps): JSX.Element {\n    const classes = useKosenSelectorStyle();\n    const history = useHistory();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const onClick = (e: any) => setAnchorEl(e.currentTarget);\n    const onClose = (e: any) => setAnchorEl(null);\n    const onChange = (college: string) => {\n        history.push('/' + college);\n        setAnchorEl(null);\n    };\n\n    return (\n        <React.Fragment>\n            <List className={classes.noSpaceY} component=\"nav\" aria-label=\"Device settings\">\n                <ListItem className={classes.noSpaceY} button onClick={onClick}>\n                    <ListItemText className={classes.noSpaceY} primary=\"CherryGrape\" secondary={props.college === undefined ? 'About' : props.college} secondaryTypographyProps={{style: { color: \"#FFFFFF\" }}} />\n                    <KeyboardArrowDownIcon className={classes.arrowIcon} />\n                </ListItem>\n            </List>\n            <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={onClose}>\n                <MenuItem selected={props.college === undefined} onClick={(e) => onChange('')}>About</MenuItem>\n                {props.kosens.map(kosen => (\n                <MenuItem key={kosen.college} selected={kosen.college === props.college} onClick={(e) => onChange(kosen.college)}>\n                    {kosen.college}\n                </MenuItem>\n                ))}\n            </Menu>\n        </React.Fragment>\n    );\n}\n\nconst RootStyles = (theme: Theme) => ({\n    appBar: {\n        background: '#01A299',\n    },\n});\ninterface RootProps {\n    onClick: () => void,\n    onMount: () => void,\n    onUpdate: () => void,\n    kosens: KosenData[] | null,\n    match: { params: { college?: string, department?: string, course?: string } },\n    classes: any,\n}\nclass Root extends React.Component<RootProps> {\n    componentDidMount() {\n        this.props.onMount();\n    }\n    componentDidUpdate(prevProps: RootProps) {\n        if(prevProps.match.params.college !== this.props.match.params.college) {\n            this.props.onUpdate();\n        }\n    }\n    render() {\n        let kosens: JSX.Element;\n        if(this.props.kosens === null) {\n            kosens = <CircularProgress />;\n        } else {\n            kosens = <KosenSelector college={this.props.match.params.college} kosens={this.props.kosens} />;\n        }\n    \n        return (\n            <Box className=\"flexColumn\" display=\"flex\">\n                <Box>\n                    <AppBar className={this.props.classes.appBar}>\n                        <Toolbar>\n                            <IconButton className={this.props.classes.menuButton} color=\"inherit\" edge=\"start\" onClick={this.props.onClick}>\n                                <MenuIcon />\n                            </IconButton>\n                            { kosens }\n                        </Toolbar>\n                    </AppBar>\n                    <Toolbar />\n                </Box>\n                <Box className=\"fullHeight\" flexGrow={1}>\n                    <Box className=\"fullHeight\" display=\"flex\">\n                        <Box>\n                            <SideMenu />\n                        </Box>\n                        <Box className=\"fullHeight\" flexGrow={1}>\n                            <Switch>\n                                <Route path=\"/:college/:department?/:course?\" component={Syllabus} />\n                                <Route component={Home} />\n                            </Switch>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        );\n    }\n}\n\nconst mapStateToProps = (state: StateType) => ({\n    kosens: state.colleges,\n});\n\nconst mapDispatchToProps = (dispatch: DispatchType) => ({\n    onClick: () => dispatch(toggleMenu()),\n    onMount: () => dispatch(fetchColleges() as any),\n    onUpdate: () => dispatch(fetchCourses() as any),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(RootStyles)(Root));\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { CssBaseline } from '@material-ui/core';\n\nimport Root from './Root';\n\ninterface AppState {\n    menuOpen: boolean,\n}\nexport default class App extends React.Component<{}, AppState> {\n    constructor(props: {}) {\n        super(props);\n        this.state = { menuOpen: true };\n        this.handleMenuClick = this.handleMenuClick.bind(this);\n        this.handleMenuClose = this.handleMenuClose.bind(this);\n        this.handleMenuOpen = this.handleMenuOpen.bind(this);\n    }\n    handleMenuClick() {\n        this.setState({ menuOpen: !this.state.menuOpen });\n    }\n    handleMenuClose() {\n        this.setState({ menuOpen: false });\n    }\n    handleMenuOpen() {\n        this.setState({ menuOpen: true });\n    }\n    render() {\n        return (\n            <Router>\n                <CssBaseline />\n                <Route path=\"/:college?/:department?/:course?\" component={Root} />\n            </Router>\n        );\n    }\n}\n","import { combineReducers } from 'redux';\n\nimport menu, { MenuState } from './menu';\nimport phone, { PhoneState } from './phone';\nimport colleges, { CollegesState } from './colleges';\nimport courses, { CoursesState } from './courses';\nimport courseInfo, { CourseInfoState } from './courseInfo';\n\nexport interface StateType {\n    menu: MenuState,\n    phone: PhoneState,\n    colleges: CollegesState,\n    courses: CoursesState,\n    courseInfo: CourseInfoState,\n}\n\nexport default combineReducers({\n    menu,\n    phone,\n    colleges,\n    courses,\n    courseInfo,\n});\n","import { SetMenuAction, ToggleMenuAction } from '../actions';\n\nexport type MenuState = boolean;\n\nexport default function(state: MenuState = true, action: SetMenuAction | ToggleMenuAction): MenuState {\n    switch(action.type) {\n        case 'SET_MENU':\n            return (action as SetMenuAction).value;\n        case 'TOGGLE_MENU':\n            return !state;\n        default:\n            return state;\n    }\n}\n","import { SetPhoneAction } from '../actions';\n\nexport type PhoneState = boolean;\n\nexport default function(state: PhoneState = false, action: SetPhoneAction): PhoneState {\n    if(action.type === 'SET_PHONE') {\n        return action.value;\n    } else {\n        return state;\n    }\n}\n","import { ReceiveCollegesAction } from '../actions';\nimport { KosenData } from '../server';\n\nexport type CollegesState = KosenData[] | null;\n\nexport default function(state: CollegesState = null, action: ReceiveCollegesAction): CollegesState {\n    if(action.type === 'RECEIVE_COLLEGES') {\n        return action.colleges;\n    } else {\n        return state;\n    }\n};","import { RequestCoursesAction, ReceiveCoursesAction } from '../actions';\nimport { DepartmentProps } from '../containers/SideMenu';\n\nexport type CoursesState = DepartmentProps[] | null;\n\nexport default function(state: CoursesState = null, action: RequestCoursesAction | ReceiveCoursesAction): CoursesState {\n    switch(action.type) {\n        case 'REQUEST_COURSES':\n            return null;\n        case 'RECEIVE_COURSES':\n            return (action as ReceiveCoursesAction).departments;\n        default:\n            return state;\n    }\n}\n","import { RequestCourseInfoAction, ReceiveCourseInfoAction } from '../actions';\nimport { SyllabusData } from '../containers/Syllabus';\n\nexport interface CourseInfoState {\n    isFetching: boolean,\n    info: SyllabusData | null,\n}\n\nexport default function(state: CourseInfoState = { isFetching: false, info: null }, action: RequestCourseInfoAction | ReceiveCourseInfoAction): CourseInfoState {\n    switch(action.type) {\n        case 'REQUEST_COURSE_INFO':\n            return { isFetching: true, info: null };\n        case 'RECEIVE_COURSE_INFO':\n            return { isFetching: false, info: (action as ReceiveCourseInfoAction).info };\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport App from './containers/App';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk),\n);\n\nexport type DispatchType = typeof store.dispatch;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useCenterStyles = makeStyles({\n    root: {\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n});\ninterface CenterProps {\n    children: JSX.Element | JSX.Element[],\n}\nexport default function Center(props: CenterProps) {\n    const classes = useCenterStyles();\n\n    return (\n        <Box className={classes.root} display=\"flex\">\n            {props.children}\n        </Box>\n    );\n}\n"],"sourceRoot":""}